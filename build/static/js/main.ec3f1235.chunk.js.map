{"version":3,"sources":["Components/Header.jsx","Components/Home.jsx","Components/MovieCard.jsx","Components/MovieList.jsx","Components/MovieDetails.jsx","Components/App.js","serviceWorker.js","index.js"],"names":["Header","submitHandler","event","preventDefault","props","history","push","textInput","value","console","log","setTextInputRef","element","className","style","border","to","textDecoration","fontWeight","onSubmit","this","type","ref","placeholder","width","height","viewBox","fill","xmlns","fillRule","d","Component","withRouter","Home","id","data-ride","data-target","data-slide-to","role","backgroundImage","href","data-slide","aria-hidden","m","movie","onClick","imdbID","display","margin","boxShadow","src","Poster","alt","backgroundColor","Title","Year","MovieList","state","movies","fetchMovies","q","queryString","parse","location","search","Axios","get","searchText","then","resp","data","Search","setState","prevProps","map","index","key","MovieDetails","Output","position","top","left","Object","keys","length","Director","Plot","Language","Awards","Writer","Genres","Actors","BoxOffice","Released","go","App","path","exact","component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"0RAGMA,E,kDAEF,aAAe,IAAD,8BACV,gBAeJC,cAAgB,SAACC,GACbA,EAAMC,iBACY,EAAKC,MAAjBC,QAEEC,KAAK,sBAAwB,EAAKC,UAAUC,OACpDC,QAAQC,IAAI,OAAZ,iBAjBA,EAAKC,gBAAkB,SAAAC,GACnB,EAAKL,UAAYK,GALX,E,qDA0BV,OACI,yBAAKC,UAAU,8CAA+CC,MAAO,CAACC,OAAQ,SAC1E,yBAAKF,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBAEX,wBAAIA,UAAU,kBAEV,kBAAC,IAAD,CAAMG,GAAG,IAAIF,MAAO,CAAEG,eAAgB,OAAQC,WAAY,QAA1D,mBAGR,yBAAKL,UAAU,iBAEX,0BAAMM,SAAUC,KAAKnB,eACjB,2BAAOoB,KAAK,SAASC,IAAKF,KAAKT,gBAC3BY,YAAY,iBACZV,UAAU,mBAGtB,yBAAKA,UAAU,uBAEX,yBAAKA,UAAU,sBAAsBW,MAAM,QAAQC,OAAO,QAAQC,QAAQ,YAAYC,KAAK,eAAeC,MAAM,8BAC5G,0BAAMC,SAAS,UAAUC,EAAE,oJAC3B,0BAAMD,SAAS,UAAUC,EAAE,gF,GAnDtCC,aA4DNC,cAAWhC,GCLXiC,G,MAxDF,WACT,OAAO,yBAAKpB,UAAU,uBAUxB,yBAAKqB,GAAG,4BAA4BrB,UAAU,iBAAiBsB,YAAU,YACvE,wBAAItB,UAAU,uBACZ,wBAAIuB,cAAY,6BAA6BC,gBAAc,IAAIxB,UAAU,WACzE,wBAAIuB,cAAY,6BAA6BC,gBAAc,MAC3D,wBAAID,cAAY,6BAA6BC,gBAAc,OAE7D,yBAAKxB,UAAU,iBAAiByB,KAAK,WAEnC,yBAAKzB,UAAU,iCAAiCC,MAAO,CAACyB,gBAAiB,4DAOzE,yBAAK1B,UAAU,gBAAgBC,MAAO,CAACyB,gBAAiB,qDAOxD,yBAAK1B,UAAU,gBAAgBC,MAAO,CAACyB,gBAAiB,wDAO1D,uBAAG1B,UAAU,wBAAwB2B,KAAK,6BAA6BF,KAAK,SAASG,aAAW,QAC1F,0BAAM5B,UAAU,6BAA6B6B,cAAY,SACzD,0BAAM7B,UAAU,WAAhB,aAEN,uBAAGA,UAAU,wBAAwB2B,KAAK,6BAA6BF,KAAK,SAASG,aAAW,QAC1F,0BAAM5B,UAAU,6BAA6B6B,cAAY,SACzD,0BAAM7B,UAAU,WAAhB,UAIN,uBAAGA,UAAU,wBAAb,sBACE,uBAAGA,UAAU,mBAAb,0BCjBSmB,eAhCG,SAAC5B,GACf,IAAIuC,EAAIvC,EAAMwC,MAcd,OACI,yBAAK/B,UAAU,4BAA4BgC,QAAS,kBAN/BC,EAMqDH,EAAEG,YAJ5E1C,EAAMC,QAAQC,KAAK,mBAAqBwC,GAFpB,IAACA,IAOjB,yBAAKjC,UAAU,OAAOC,MAblB,CACRU,MAAO,QAASuB,QAAS,eAAgBC,OAAQ,gBAAiBvB,OAAQ,QAC1EV,OAAQ,OAAQkC,UAAW,uBAYnB,yBAAKpC,UAAU,eAAe6B,eAAA,EAAYQ,IAAKP,EAAEQ,OAAQC,IAAI,mBAC7D,yBAAKvC,UAAU,YAAYC,MAAO,CAACuC,gBAAiB,SAChD,wBAAIxC,UAAU,cAAc8B,EAAEW,OAC9B,uBAAGzC,UAAU,aAAa8B,EAAEY,MAC5B,uBAAG1C,UAAU,aAAY,2BAAOA,UAAU,cAAc8B,EAAEY,a,kCCoB/DC,E,4MArCPC,MAAQ,CAAEC,OAAQ,I,EAetBC,YAAc,WACd,IAAIC,EAAIC,IAAYC,MAAM,EAAK1D,MAAM2D,SAASC,QAC9CC,IAAMC,IAAN,qDAAwDN,EAAEO,aACzDC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,QAClBF,MAAK,SAAAE,GAAI,OAAIA,EAAKC,UAClBH,MAAK,SAAAxB,GAAK,OAAG,EAAK4B,SAAS,CAACd,OAASd,Q,kEAhBtCxB,KAAKuC,cACLlD,QAAQC,IAAIU,KAAKhB,S,yCAIEqE,GACfrD,KAAKhB,MAAM2D,WAAaU,EAAUV,UAClC3C,KAAKuC,gB,+BAgBR,IAAMH,EAAYpC,KAAKqC,MAAMC,OAAOgB,KAAI,SAAC/B,EAAGgC,GAAJ,OAAc,kBAAC,EAAD,CAAW/B,MAASD,EAAGiC,IAAKD,EAAQ9D,UAAU,yBAErG,OACK,yBAAKA,UAAU,OAEhB2C,O,GApCgBzB,aC8FT8C,E,4MA7FXpB,MAAQ,CAAEb,MAAO,I,EAajBe,YAAc,WACV,IAAIC,EAAIC,IAAYC,MAAM,EAAK1D,MAAM2D,SAASC,QAC9CC,IAAMC,IAAN,qDAAwDN,EAAEd,SACrDsB,MAAK,SAAAC,GAAI,OAAIA,EAAKC,QAClBF,MAAK,SAAAV,GAAM,OAAI,EAAKc,SAAS,CAAE5B,MAAOc,Q,kEAd3CtC,KAAKuC,cACLlD,QAAQC,IAAIU,KAAKhB,S,yCAGFqE,GACXrD,KAAKhB,MAAM2D,WAAaU,EAAUV,UAClC3C,KAAKuC,gB,+BAWH,IAAD,OACAf,EAASxB,KAAKqC,MAAdb,MACDkC,EAAS,6BACR,yBAAK5B,IAAI,QAAQE,IAAI,UAAUtC,MAAO,CAACiE,SAAS,WAAYC,IAAI,MAAQC,KAAK,UA+DlF,OA7DGrC,GAASsC,OAAOC,KAAKvC,GAAOwC,OAAS,IACrCN,EAAS,6BAET,yBAAKjE,UAAU,OACX,yBAAKA,UAAU,6BACX,yBAAKqC,IAAKN,EAAMO,OAAQC,IAAI,eAAevC,UAAU,uBAEzD,yBAAKA,UAAU,6BACT,wBAAIA,UAAU,mBAAmB+B,EAAMU,OAC7C,2BAAOzC,UAAU,kCAClB,+BACI,4BACI,wCACA,4BAAK+B,EAAMyC,WAEf,4BACI,oCACA,4BAAKzC,EAAM0C,OAEf,4BACI,oCACA,4BAAK1C,EAAMW,OAEf,4BACI,wCACA,4BAAKX,EAAM2C,WAEf,4BACI,sCACA,4BAAK3C,EAAM4C,SAEf,4BACI,sCACA,4BAAK5C,EAAM6C,SAEf,4BACI,qCACA,4BAAK7C,EAAM8C,SAEf,4BACI,sCACA,4BAAK9C,EAAM+C,SAEf,4BACI,0CACA,4BAAK/C,EAAMgD,YAEf,4BACI,wCACA,4BAAKhD,EAAMiD,aAKlB,4BAAQxE,KAAK,SAASR,UAAU,uBAAuBgC,QAAU,kBAAK,EAAKzC,MAAMC,QAAQyF,IAAI,KAA7F,YAOAhB,M,GAxFY/C,aCsBZgE,MAnBf,WACE,OACE,yBAAKlF,UAAU,OAEb,kBAAC,IAAD,KACE,6BACE,kBAAC,EAAD,MACC,yBAAKA,UAAU,uBACd,kBAAC,IAAD,CAAOmF,KAAK,IAAIC,OAAO,EAAMC,UAAWjE,IACxC,kBAAC,IAAD,CAAO+D,KAAK,UAAUE,UAAW1C,IACjC,kBAAC,IAAD,CAAOwC,KAAK,WAAWE,UAAWrB,SCLxCsB,EAAcC,QACW,cAA7BC,OAAOtC,SAASuC,UAEe,UAA7BD,OAAOtC,SAASuC,UAEhBD,OAAOtC,SAASuC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTrC,MAAK,SAAA0C,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBvD,QACfkD,UAAUC,cAAcO,YAI1B1G,QAAQC,IACN,iHAKEgG,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlBrG,QAAQC,IAAI,sCAGRgG,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5BQ,OAAM,SAAAC,GACL9G,QAAQ8G,MAAM,4CAA6CA,M,MC1FjEC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDYnB,SAAkBlB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIkB,IAAIC,GAAwBzB,OAAOtC,SAASvB,MACpDuF,SAAW1B,OAAOtC,SAASgE,OAIvC,OAGF1B,OAAO2B,iBAAiB,QAAQ,WAC9B,IAAMvB,EAAK,UAAMqB,GAAN,sBAEP3B,IAgEV,SAAiCM,EAAOC,GAEtCuB,MAAMxB,EAAO,CACXyB,QAAS,CAAE,iBAAkB,YAE5B9D,MAAK,SAAA+D,GAEJ,IAAMC,EAAcD,EAASD,QAAQhE,IAAI,gBAEnB,MAApBiE,EAASE,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5C3B,UAAUC,cAAc2B,MAAMnE,MAAK,SAAA0C,GACjCA,EAAa0B,aAAapE,MAAK,WAC7BiC,OAAOtC,SAAS0E,eAKpBjC,EAAgBC,EAAOC,MAG1BY,OAAM,WACL7G,QAAQC,IACN,oEAvFAgI,CAAwBjC,EAAOC,GAI/BC,UAAUC,cAAc2B,MAAMnE,MAAK,WACjC3D,QAAQC,IACN,iHAMJ8F,EAAgBC,EAAOC,OClC/BE,K","file":"static/js/main.ec3f1235.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        //           this.submitHandler = this.submitHandler.bind(this)}\r\n\r\n        this.setTextInputRef = element => {\r\n            this.textInput = element;\r\n        };\r\n    }\r\n    //    Instead of bind like this can use arrow function\r\n\r\n    // submitHandler(event){\r\n    //     event.preventDefault();\r\n    //     console.log('this',this)}\r\n\r\n\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        let { history } = this.props;\r\n\r\n        history.push('/movies?searchText=' + this.textInput.value)\r\n        console.log('this', this)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"alert alert-primary bg-dark text-white mb-0\"  style={{border: \"none\"}}>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4 col-sm-12\">\r\n                       \r\n                            <h4 className=\"text-left mt-2\">\r\n                              \r\n                                <Link to=\"/\" style={{ textDecoration: \"none\", fontWeight: \"400\" }}>MOVIE BROWSER</Link>\r\n                            </h4>\r\n                        </div>\r\n                        <div className=\"col-md-6 mb-1\">\r\n\r\n                            <form onSubmit={this.submitHandler}>\r\n                                <input type=\"search\" ref={this.setTextInputRef}\r\n                                    placeholder=\"Search Movie..\"\r\n                                    className=\"form-control\"></input>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"col-md-2 text-right\">\r\n\r\n                            <svg className=\"bi bi-person-square\" width=\"1.5em\" height=\"2.8em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path fillRule=\"evenodd\" d=\"M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\" />\r\n                                <path fillRule=\"evenodd\" d=\"M2 15v-1c0-1 1-4 6-4s6 3 6 4v1H2zm6-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\" />\r\n                            </svg>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(Header)","import React from 'react'\r\nimport '../../src/Components/App.css';\r\nconst Home = () => {\r\n    return <div className=\"container-fluid p-0\">\r\n    {/* <div className=\"row\">\r\n     <div className=\"col-md-4 col-xs-12\">\r\n\r\n     </div>\r\n     <div className=\"col-md-12 col-xs-12 text-center\"> */}\r\n     {/* <img src=\"img.png\" alt=\"Sanjeev\" className=\"img img-thumbnail\" height=\"300\" width=\"300\"/> */}\r\n\r\n\r\n\r\n  <div id=\"carouselExampleIndicators\" className=\"carousel slide\" data-ride=\"carousel\">\r\n    <ol className=\"carousel-indicators\">\r\n      <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"0\" className=\"active\"></li>\r\n      <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"1\"></li>\r\n      <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"2\"></li>\r\n    </ol>\r\n    <div className=\"carousel-inner\" role=\"listbox\">\r\n      {/* <!-- Slide One - Set the background image for this slide in the line below --> */}\r\n      <div className=\"carousel-item active img-fluid\" style={{backgroundImage: \"url('white-screen-projector-by-the-beach-2507025.jpg')\"}}>\r\n        {/* <div className=\"carousel-caption d-none d-md-block\">\r\n          <h2 className=\"display-4\">First Slide</h2>\r\n          <p className=\"lead\">This is a description for the first slide.</p>\r\n        </div> */}\r\n      </div>\r\n      {/* <!-- Slide Two - Set the background image for this slide in the line below --> */}\r\n      <div className=\"carousel-item\" style={{backgroundImage: \"url('three-assorted-movie-posters-3137890.jpg')\"}}>\r\n        {/* <div className=\"carousel-caption d-none d-md-block\">\r\n          <h2 className=\"display-4\">Second Slide</h2>\r\n          <p className=\"lead\">This is a description for the second slide.</p>\r\n        </div> */}\r\n      </div>\r\n      {/* <!-- Slide Three - Set the background image for this slide in the line below --> */}\r\n      <div className=\"carousel-item\" style={{backgroundImage: \"url('food-snack-popcorn-movie-theater-33129.jpg')\"}}>\r\n        {/* <div className=\"carousel-caption d-none d-md-block\">\r\n          <h2 className=\"display-4\">Third Slide</h2>\r\n          <p className=\"lead\">This is a description for the third slide.</p>\r\n        </div> */}\r\n      </div>\r\n    </div>\r\n    <a className=\"carousel-control-prev\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"prev\">\r\n          <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n          <span className=\"sr-only\">Previous</span>\r\n        </a>\r\n    <a className=\"carousel-control-next\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"next\">\r\n          <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n          <span className=\"sr-only\">Next</span>\r\n        </a>\r\n  </div>\r\n\r\n    <p className=\"text-white mb-1 mt-2\"> BROWSER MOVIE APP</p>\r\n      <b className=\"text-white pb-3\">Powered by REACT JS</b>\r\n     </div>\r\n \r\n  \r\n}\r\nexport default Home","import React from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n//const movie = {\"Title\":\"Iron Man\",\"Year\":\"2008\",\"imdbID\":\"tt0371746\",\"Type\":\"movie\",\"Poster\":\"https://m.media-amazon.com/images/M/MV5BMTczNTI2ODUwOF5BMl5BanBnXkFtZTcwMTU0NTIzMw@@._V1_SX300.jpg\"}\r\nconst MovieCard = (props) => {\r\n    let m = props.movie;\r\n\r\n\r\n    let style = {\r\n        width: '300px', display: 'inline-block', margin: '50px 0 20px 0', height: '570px',\r\n        border: 'none', boxShadow: '10px 10px 10px 0px', \r\n    }\r\n\r\n\r\n    const getMovieDetails = (imdbID) => {\r\n\r\n        props.history.push('/details?imdbID=' + imdbID)\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-md-4 text-center mb-4\" onClick={() => getMovieDetails(m.imdbID)}>\r\n            <div className=\"card\" style={style}>\r\n                <img className=\"card-img-top\" aria-hidden src={m.Poster} alt=\"Card image cap\" />\r\n                <div className=\"card-body\" style={{backgroundColor: \"#ccc\"}}>\r\n                    <h5 className=\"card-title\">{m.Title}</h5>\r\n                    <p className=\"card-text\">{m.Year}</p>\r\n                    <p className=\"card-text\"><small className=\"text-muted\">{m.Year}</small></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(MovieCard)","import React,{Component} from 'react'\r\nimport MovieCard from './MovieCard'\r\nimport Axios from 'axios';\r\nimport queryString from 'query-string';\r\n\r\nclass MovieList extends Component{\r\n//   constructor(){\r\n//       super()\r\n            \r\n        state = { movies: [] }\r\n    // }\r\n\r\n    componentDidMount(){\r\n    this.fetchMovies();\r\n    console.log(this.props)\r\n   }\r\n\r\n\r\n    componentDidUpdate(prevProps){\r\n     if(this.props.location !== prevProps.location){\r\n        this.fetchMovies();\r\n     }\r\n    }\r\n   \r\n    fetchMovies = () => {\r\n    let q = queryString.parse(this.props.location.search)\r\n    Axios.get(`http://www.omdbapi.com/?&apikey=8213ab72&s=${q.searchText}`)\r\n    .then(resp => resp.data)\r\n    .then(data => data.Search)\r\n    .then(movie=> this.setState({movies : movie}))\r\n   }\r\n\r\n\r\n      \r\n    render(){\r\n     \r\n     const MovieList = this.state.movies.map((m, index) => <MovieCard movie = {m} key={index}  className=\"position-relative\"/>)\r\n    \r\n    return(\r\n         <div className=\"row\">\r\n             \r\n       {MovieList}\r\n       </div>\r\n        )}\r\n}\r\n\r\nexport default MovieList;","import React, { Component } from 'react';\r\nimport Axios from 'axios';\r\nimport queryString from 'query-string'\r\n\r\nclass MovieDetails extends Component {\r\n\r\n    state = { movie: {} }\r\n\r\n    componentDidMount() {\r\n        this.fetchMovies();\r\n        console.log(this.props)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location !== prevProps.location) {\r\n            this.fetchMovies();\r\n        }\r\n    }\r\n\r\n    fetchMovies = () => {\r\n        let q = queryString.parse(this.props.location.search)\r\n        Axios.get(`http://www.omdbapi.com/?&apikey=8213ab72&i=${q.imdbID}`)\r\n            .then(resp => resp.data)\r\n            .then(movies => this.setState({ movie: movies }))\r\n    }\r\n         \r\n    render() {\r\n        let {movie} = this.state;\r\n        let Output = <div>\r\n             <img src='5.gif' alt=\"Loading\" style={{position:'absolute', top:'50%' , left:'50%'}}/>\r\n        </div>\r\n        if(movie && Object.keys(movie).length > 0){\r\n           Output = <div>\r\n\r\n           <div className=\"row\">\r\n               <div className=\"col-md-4 text-center mb-2\">\r\n                   <img src={movie.Poster} alt=\"movie Poster\" className=\"img img-thumbnail\"></img>     \r\n                                </div>\r\n               <div className=\"col-md-8 table-responsive\">\r\n                    {<h1 className=\"text-white mb-4\">{movie.Title}</h1> }\r\n               <table className=\"table table-striped table-dark\">\r\n              <tbody>\r\n                  <tr>\r\n                      <td>Director</td>\r\n                      <td>{movie.Director}</td>\r\n                  </tr>\r\n                  <tr>\r\n                      <td>Plot</td>\r\n                      <td>{movie.Plot}</td>\r\n                  </tr>\r\n                  <tr>\r\n                      <td>Year</td>\r\n                      <td>{movie.Year}</td>\r\n                  </tr>\r\n                  <tr>\r\n                      <td>Language</td>\r\n                      <td>{movie.Language}</td>\r\n                  </tr>\r\n                  <tr>\r\n                      <td>Awards</td>\r\n                      <td>{movie.Awards}</td>\r\n                  </tr>\r\n                  <tr>\r\n                      <td>Writer</td>\r\n                      <td>{movie.Writer}</td>\r\n                  </tr>\r\n                  <tr>\r\n                      <td>Genre</td>\r\n                      <td>{movie.Genres}</td>\r\n                  </tr>\r\n                  <tr>\r\n                      <td>Actors</td>\r\n                      <td>{movie.Actors}</td>\r\n                  </tr>\r\n                  <tr>\r\n                      <td>Box Office</td>\r\n                      <td>{movie.BoxOffice}</td>\r\n                  </tr>\r\n                  <tr>\r\n                      <td>Released</td>\r\n                      <td>{movie.Released}</td>\r\n                  </tr>\r\n                  </tbody> \r\n\r\n               </table>\r\n               <button type=\"button\" className=\"btn btn-primary mb-5\" onClick={ () =>this.props.history.go(-1)}>Back</button>\r\n           </div>\r\n           </div>\r\n          \r\n            \r\n       </div>\r\n        }\r\n        return Output\r\n          \r\n        \r\n    }\r\n}\r\n\r\n\r\nexport default MovieDetails;\r\n\r\n\r\n","import React from 'react';\nimport Header from'./Header';\nimport Home from './Home';\nimport MovieCard from './MovieCard'\nimport MovieList from './MovieList';\nimport {BrowserRouter, Route } from 'react-router-dom'\nimport MovieDetails from './MovieDetails';\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <BrowserRouter>\n        <div>\n          <Header></Header>\n           <div className=\"container-fluid p-0\">\n            <Route path=\"/\" exact={true} component={Home} />\n            <Route path=\"/movies\" component={MovieList} />\n            <Route path=\"/details\" component={MovieDetails} />\n             </div></div>\n     \n      </BrowserRouter>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}